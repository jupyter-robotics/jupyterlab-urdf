name: Build

on:
  push:
    branches: main
  pull_request:
    branches: '*'

defaults:
  run:
    shell: bash -el {0}

jobs:
  build:
    name: Build and test
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Set up environment
      uses: mamba-org/setup-micromamba@v2
      with:
        environment-name: urdf
        init-shell: bash
        create-args: >-
          python
          python-build
          jupyterlab>=4.0
          hatch-jupyter-builder
          nodejs

    - name: Lint the extension
      run: |
        jlpm
        jlpm run lint:check

    - name: Test the extension
      run: jlpm run test

    - name: Build the extension
      run: |
        python -m pip install .[test]
        jupyter labextension list
        jupyter labextension list 2>&1 | grep -ie "jupyterlab-urdf.*OK"
        python -m jupyterlab.browser_check

    - name: Package the extension
      run: |
        python -m build
        pip uninstall -y "jupyterlab_urdf" jupyterlab

    - name: Upload extension packages
      uses: actions/upload-artifact@v4
      with:
        name: extension-artifacts
        path: dist/jupyterlab_urdf*
        if-no-files-found: error

  test-isolated:
    name: Isolated tests
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Set up environment
      uses: mamba-org/setup-micromamba@v2
      with:
        environment-name: urdf-isolated
        init-shell: bash
        create-args: >-
          python
          jupyterlab>=4.0

    - name: Download extension package
      uses: actions/download-artifact@v4
      with:
        name: extension-artifacts

    - name: Install and test
      run: |
        pip install jupyterlab_urdf*.whl
        jupyter labextension list
        jupyter labextension list 2>&1 | grep -ie "jupyterlab-urdf.*OK"
        python -m jupyterlab.browser_check --no-browser-test

  test-integration:
    name: Integration tests
    needs: build
    runs-on: ubuntu-latest

    env:
      PLAYWRIGHT_BROWSERS_PATH: ${{ github.workspace }}/pw-browsers

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Set up environment
      uses: mamba-org/setup-micromamba@v2
      with:
        environment-name: urdf-integration
        init-shell: bash
        create-args: >-
          python
          jupyterlab==4.0.3

    - name: Download extension package
      uses: actions/download-artifact@v4
      with:
        name: extension-artifacts

    - name: Install the extension
      run: |
        pip install jupyterlab_urdf*.whl
        jupyter labextension list

    - name: Install dependencies
      working-directory: ui-tests
      env:
        PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: 1
      run: jlpm install

    - name: Set up browser cache
      uses: actions/cache@v4
      with:
        path: ${{ github.workspace }}/pw-browsers
        key: ${{ runner.os }}-${{ hashFiles('ui-tests/yarn.lock') }}

    - name: Install browser
      run: jlpm playwright install chromium
      working-directory: ui-tests

    - name: Execute integration tests
      working-directory: ui-tests
      run: jlpm playwright test

    - name: Upload playwright test report
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: jupyterlab_urdf-playwright-tests
        path: |
          ui-tests/test-results
          ui-tests/playwright-report

  check_links:
    name: Check links
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v4
      - uses: jupyterlab/maintainer-tools/.github/actions/base-setup@v1
      - uses: jupyterlab/maintainer-tools/.github/actions/check-links@v1
